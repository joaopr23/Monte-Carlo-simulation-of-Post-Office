def mean_confidence_interval(data, alpha):
  n = len(data)
  m = float(sum(data))/n # sample mean
  var = sum([(x - m)**2 for x in data]) / float(n-1) # sample variance
  # calls the inverse CDF of the Student's t distribution
  import scipy.stats, math
  tfact = scipy.stats.t._ppf(1-alpha/2., n-1)
  h = tfact * math.sqrt(var/n)
  return m-h, m+h
if __name__ == "__main__":
  confidence = .99 
  alpha = 1 - confidence
  data = [57,56,60,60,61,58,57,57,61,61,56,58,59,57,57,58,56,58,59,62,57,60,58,61,57,56,58,59,56,59,60,57,60,59,58,61,60,60,58,57,54,60,60,59,60,56,59,57,63,56,57,61,60,62,56,58,62,56,57,57,60,60,61,59,62,62,56,54,57,63,58,61,57,58,56,56,56,57,57,57,57,57,58,57,57,59,62,59,63,60,58,60,59,64,56,59,58,61,58,62,55,57,55,58,59,59,58,62,61,59,57,58,58,62,60,58,56,59,56,58,57,58,57,58,56,58,58,58,57,59,62,56,64,58,56,60,60,61,58,57,59,55,57,60,59,60,57,62,60,58,58,57,56,57,60,61,59,56,60,58,56,55,57,56,58,62,59,56,59,60,58,59,56,55,56,57,58,58,57,57,59,57,58,58,54,56,59,59,60,57,63,62,61,60,61,56,60,61,61,56,60,58,60,61,57,62,56,61,58,58,57,56,59,56,58,58,58,58,57,58,59,61,60,60,57,59,56,57,58,58,58,61,62,57,58,58,61,58,56,54,56,59,57,56,59,59,57,57,56,57,59,59,63,59,54,64,60,57,57,59,59,62,56,57,58,60,60,60,59,59,58,57,59,60,58,58,57,57,56,61,58,59,58,59,59,62,61,59,56,63,56,60,59,58,58,63,57,58,59,59,58,59,56,61,57,56,61,57,59,58,59,57,59,62,57,55,57,55,60,61,58,57,58,61,57,55,56,58,57,58,65,58,60,59,58,58,61,55,57,53,55,58,59,56,57,59,61,60,57,60,58,57,62,59,56,59,59,59,58,57,61,56,57,57,61,56,62,59,58,57,60,55,59,55,57,58,58,58,54,62,59,57,60,56,63,58,59,56,58,55,56,59,57,60,61,60,57,58,60,59,57,56,60,56,56,57,57,59,57,57,56,59,56,59,57,55,58,60,58,56,57,57,58,57,55,58,58,59,59,58,59,58,61,57,59,62,63,60,59,62,57,61,55,57,58,59,57,62,57,56,55,60,61,57,62,56,63,56,58,62,57,58,55,58,58,61,59,61,62,57,57,57,59,58,63,63,58,59,55,57,58,58,54,58,56,59,55,57,60,58,61,60,55,57,58,57,60,59,57,58,59,61,56,57,57,53,58,58,55,55,62,56,58,55,58,57,56,59,57,57,59,57,55,59,59,58,58,57,58,61,60,55,53,61,59,59,59,59,58,60,57,60,58,56,60,57,60,57,64,57,62,57,59,59,59,59,58,59,58,60,56,60,57,58,60,59,57,60,59,58,62,62,58,61,60,55,58,64,60,58,57,57,60,58,54,59,61,54,58,59,58,58,59,58,59,57,60,59,60,54,56,57,59,58,57,58,58,58,61,62,59,61,55,58,58,58,55,58,57,56,57,61,58,59,59,59,60,57,60,57,56,57,64,58,58,58,55,60,58,58,58,59,55,59,57,55,56,60,58,58,58,58,61,57,55,57,58,57,60,56,57,61,58,56,59,55,57,58,61,61,62,55,58,57,56,58,57,57,61,62,59,58,55,61,59,55,57,55,66,56,57,57,61,59,59,58,59,58,62,60,61,57,58,60,61,57,56,55,58,61,55,59,61,60,58,62,58,56,56,57,57,60,57,60,58,60,59,59,56,57,59,64,60,60,56,58,60,55,56,61,58,60,62,57,60,60,59,60,59,60,63,57,61,62,60,59,55,60,58,59,61,60,55,56,57,62,59,59,58,58,56,59,60,61,55,61,59,56,59,60,58,57,58,59,59,57,58,59,58,62,57,59,60,59,57,54,59,56,58,58,59,60,57,58,61,56,56,61,55,55,60,56,57,57,59,57,63,61,62,57,58,57,57,60,57,61,57,58,59,60,59,56,55,59,57,56,55,56,56,60,56,60,57,62,59,54,58,61,59,59,60,56,58,61,55,60,56,58,61,61,60,57,61,58,58,58,57,57,60,54,60,61,57,58,60,56,60,56,57,58,58,58,59,61,57,57,61,55,57,60,57,59,57,59,58,61,59,61,61,58,59,59,58,57,55,57,59,57,58,59,57,59,58,61,57,62,56,58,61,60,62,58,57,58,58,61,57,61,61,63,62,59,56,61,58,58,59,58,57,58,57,62,61,58,55,59,56,59,62,63,58,59,58,58,55,55,58,60,57,59,58,59,58,57,62,59,58,60,55,61,62,62,58,56,57,57,58,55,58,58,60,58,60,55,58,56,57,57,55,58,57,61,58,61,58,55,57,56,60,55]
  print(mean_confidence_interval(data, alpha))
