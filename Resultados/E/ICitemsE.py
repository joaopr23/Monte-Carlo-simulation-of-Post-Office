def mean_confidence_interval(data, alpha):
  n = len(data)
  m = float(sum(data))/n # sample mean
  var = sum([(x - m)**2 for x in data]) / float(n-1) # sample variance
  # calls the inverse CDF of the Student's t distribution
  import scipy.stats, math
  tfact = scipy.stats.t._ppf(1-alpha/2., n-1)
  h = tfact * math.sqrt(var/n)
  return m-h, m+h
if __name__ == "__main__":
  confidence = .99 # 95%
  alpha = 1 - confidence
  data = [58,62,62,59,57,58,59,58,60,56,57,60,59,59,56,58,56,59,59,56,59,62,58,61,62,58,59,55,59,60,59,61,61,58,55,60,60,61,57,57,61,58,59,61,61,56,58,57,59,60,56,59,62,59,59,59,61,62,60,62,60,62,59,54,60,61,57,58,55,58,56,60,55,56,58,58,59,58,55,59,62,62,61,58,58,58,57,60,57,59,58,60,56,57,61,59,58,58,59,59,59,56,57,59,56,59,58,60,58,57,61,56,55,58,65,61,58,59,58,60,58,62,58,56,59,59,55,62,57,59,58,56,58,60,59,58,58,60,58,57,56,63,58,59,59,60,57,59,59,59,57,57,59,61,60,56,61,57,62,56,57,56,59,60,61,56,56,60,58,61,54,58,60,61,56,59,59,59,60,58,60,58,58,58,61,58,62,63,60,58,60,56,60,57,58,59,57,59,53,59,57,60,61,56,58,57,57,56,58,58,54,59,57,58,58,60,58,56,59,60,58,57,58,56,61,58,59,60,58,57,57,60,59,63,58,54,58,59,56,58,58,59,55,60,61,60,58,59,59,60,59,63,58,56,59,59,58,59,57,60,61,59,56,60,57,60,56,55,58,61,54,58,58,63,58,59,60,62,59,61,61,60,58,59,56,59,60,56,56,59,57,59,57,57,58,54,64,54,61,59,60,57,61,61,58,56,57,57,57,56,55,55,57,57,61,56,58,56,58,63,59,60,61,60,57,61,58,58,61,59,56,58,56,59,55,58,56,59,59,59,57,56,56,58,57,60,56,61,60,62,56,59,60,58,56,60,56,57,57,59,58,58,61,60,58,60,62,60,55,63,59,61,57,60,58,57,65,57,59,58,58,57,57,61,60,57,61,59,59,58,66,60,60,57,57,60,56,57,61,59,57,58,59,60,57,62,60,55,59,60,62,57,58,60,58,59,59,57,59,57,56,56,60,58,58,59,56,60,57,58,63,57,58,62,57,60,59,57,58,60,59,60,57,57,58,58,58,57,57,59,59,63,60,56,59,57,59,58,57,58,56,57,57,59,60,56,57,57,57,56,58,58,56,56,55,61,61,59,58,56,58,59,60,58,59,56,55,58,56,57,61,56,56,60,56,59,57,56,58,62,60,60,57,61,57,61,57,58,60,56,59,59,55,61,57,56,62,62,56,59,59,60,58,56,57,57,61,56,62,59,57,59,59,58,59,58,57,58,60,58,56,55,58,60,56,57,55,57,56,59,56,58,60,58,56,57,57,57,59,60,57,57,60,58,57,55,60,59,59,59,56,56,56,62,60,61,58,54,59,61,57,55,59,65,58,59,59,58,58,60,58,57,62,55,56,59,57,60,58,58,60,60,60,56,59,57,59,60,58,54,59,62,58,59,58,57,58,59,60,64,55,57,59,58,57,58,59,55,57,58,55,59,59,59,62,58,57,59,54,57,57,57,58,61,55,56,56,59,56,59,56,58,60,56,59,57,61,57,61,56,57,58,58,61,60,58,58,58,60,60,59,60,58,61,57,59,59,59,59,62,56,58,59,55,58,56,60,58,55,60,61,59,59,56,57,56,60,56,60,58,53,60,59,58,58,63,56,59,57,58,57,56,60,59,61,59,57,58,57,60,57,57,60,61,54,57,55,59,62,56,59,56,62,56,58,58,58,58,58,59,63,57,61,58,53,57,61,58,56,59,59,57,58,57,60,55,59,57,60,56,55,58,55,60,54,59,55,57,59,58,60,60,61,60,58,58,59,55,59,56,58,59,57,61,57,61,58,57,57,65,57,58,62,58,58,58,59,57,64,57,57,58,56,60,56,59,58,63,57,56,64,61,60,56,58,56,59,62,60,61,58,59,58,60,58,61,58,59,59,60,58,58,59,60,59,59,57,59,62,60,56,59,58,58,56,60,60,60,57,58,59,61,59,56,58,57,55,59,57,58,58,56,57,58,59,58,60,63,56,62,57,61,58,58,57,60,60,56,60,57,57,60,60,56,58,60,57,59,59,55,57,59,63,58,56,58,57,58,57,60,58,57,61,58,61,57,55,59,58,56,58,61,60,54,62,59,56,59,57,59,62,58,55,59,59,59,59,59,55,59,60,55,58,56,59,57,60,60,59,58,57,59,61,59,57,56,56,62,58,59,58,59,57,57,60,61,53,59,60,62,57,60,58,61,59,55,57,58,59,65,55,57,56,61,58,57,57,57,59,63,59,56,59,62,59,55,63,66,55,58,56,55,61,58,56,55,61,57,57,57]
  print(mean_confidence_interval(data, alpha))
